{
  "name": "shopify-buy",
  "version": "0.3.2",
  "description": "The JS Buy SDK is a lightweight library that allows you to build ecommerce into any website. It is based on Shopify's API and provides the ability to retrieve products and collections from your shop, add products to a cart, and checkout.",
  "main": "lib/shopify.js",
  "jsnext:main": "src/shopify.js",
  "repository": "git@github.com:Shopify/js-buy-sdk.git",
  "scripts": {
    "prepublish": "npm run build",
    "postpublish": "rm polyfilled.js",
    "start": "rimraf dist/; mkdir dist/; rimraf .dist-test/; mkdir .dist-test/; concurrently 'npm run test-sdk:build' 'npm run test:watch' 'http-server -p 4200 .dist-test/' 'npm run -s start:wait-print-msg'",
    "test": "rimraf dist/; mkdir dist/; rimraf .dist-test/; mkdir .dist-test/; npm run test:setup && testem ci",
    "test-example": "rimraf .dist-test/; mkdir .dist-test/; selenium-standalone install && concurrently 'npm run test:setup' 'npm run umd-shopify-buy-polyfilled:build' 'npm run examples:build' && cp dist/shopify-buy.umd.polyfilled.js .dist-test/shopify-buy.umd.polyfilled.js && npm run test-example:run",
    "test-ci": "rimraf dist/; mkdir dist/; rimraf .dist-test/; mkdir .dist-test/; npm run test:setup && testem ci -R xunit > tests.xml",
    "examples:serve": "rimraf .dist-test/; mkdir .dist-test/; rimraf dist/; mkdir dist/; npm run examples:build && concurrently 'npm run umd-shopify-buy:watch' 'http-server -p 4200 .dist-test/'",
    "build": "rimraf dist/; mkdir dist/; concurrently 'npm run umd-shopify-buy:build' 'npm run umd-shopify-buy-polyfilled:build' && concurrently 'npm run umd-shopify-buy:minify' 'npm run umd-shopify-buy-polyfilled:minify' 'npm run commonjs:build' 'npm run commonjs-polyfilled:build'",
    "doc:build": "./scripts/build-doc",
    "doc:serve": "jekyll serve -s docs",
    "------ Scripts used to build JS for distribution": null,
    "umd-shopify-buy:watch": "nodemon --exec 'npm run umd-shopify-buy-all:build && cp dist/*.js .dist-test/' -w src/",
    "umd-shopify-buy-all:build": "concurrently 'npm run umd-shopify-buy:build' 'npm run umd-shopify-buy-polyfilled:build'",
    "umd-shopify-buy:build": "rollup -f cjs src/shopify.js | node scripts/runBabel umd > dist/shopify-buy.umd.js",
    "umd-shopify-buy:minify": "uglifyjs --compress --mangle -o dist/shopify-buy.umd.min.js -- dist/shopify-buy.umd.js",
    "umd-shopify-buy-polyfilled:build": "rollup -f cjs --config .rollup.config.umd.polyfilled.js src/shopify-polyfilled.js | node scripts/runBabel umd > dist/shopify-buy.umd.polyfilled.js",
    "umd-shopify-buy-polyfilled:minify": "uglifyjs --compress --mangle -o dist/shopify-buy.umd.polyfilled.min.js -- dist/shopify-buy.umd.polyfilled.js",
    "commonjs:build": "cross-env BABEL_ENV=commonjs VERSION=$(get-project-version --template v{{version}}-{{commit}}) babel --ignore src/polyfilled.js -d lib/ src/",
    "commonjs-polyfilled:build": "cp src/polyfilled.js ./polyfilled.js && cross-env BABEL_ENV=commonjs VERSION=$(get-project-version --template v{{version}}-{{commit}}) babel -o polyfilled.js polyfilled.js",
    "------ Scripts to compile JS for testing": null,
    "test:setup": "npm run test-sdk:build && npm run test:build",
    "test:build": "concurrently 'npm run tests-polyfill:build' 'npm run amd-shopify-buy:build' 'npm run tests:build'",
    "test:watch": "concurrently 'npm run tests-polyfill:build' 'npm run amd-shopify-buy:watch' 'npm run tests:watch'",
    "test-sdk:build": "concurrently 'npm run qunit:copy' 'cp tests/index.html .dist-test/index.html' && node scripts/build-testing-sdk.js > .dist-test/sdk-testing.js",
    "tests:build": "npm run qunit-shim:build && npm run amd-tests:build",
    "tests:watch": "npm run qunit-shim:build && npm run amd-tests:watch",
    "tests-polyfill:build": "rollup --config .rollup.config.umd.polyfilled.js src/polyfills.js | node scripts/runBabel umd > .dist-test/polyfills.js",
    "amd-tests:build": "cross-env BABEL_ENV=amd-tests babel tests/ > .dist-test/tests.js",
    "amd-tests:watch": "cross-env BABEL_ENV=amd-tests babel -w src/ -o .dist-test/tests.js tests",
    "amd-shopify-buy:build": "BABEL_ENV=amd VERSION=$(get-project-version --template v{{version}}-{{commit}}) babel src/ > .dist-test/shopify-buy.amd.js",
    "amd-shopify-buy:watch": "nodemon --exec 'npm run amd-shopify-buy:build' -w src/",
    "qunit-shim:build": "cross-env BABEL_ENV=amd-test-qunit-shim babel tests/shims/ > .dist-test/qunit-shim.js",
    "qunit:copy": "cp node_modules/qunitjs/qunit/qunit.js .dist-test/qunit.js && cp node_modules/qunitjs/qunit/qunit.css .dist-test/qunit.css",
    "------ Scripts for testing-examples": null,
    "test-example:run": "concurrently -k --success first 'selenium-standalone start -- -log selenium.log' 'http-server -p 4200 .dist-test/' 'npm run wdio:run'",
    "test-example:build": "",
    "wdio:run": "wait-on tcp:4444 && wait-on tcp:4200 && wdio --logLevel silent .dist-test/examples/cart/wdio.conf.js",
    "examples:build": "npm run examples:copy && npm run examples-css:build",
    "examples-css:build": "concurrently 'npm run examples-css-cart:build' 'npm run examples-css-checkout:build'",
    "examples-css-cart:build": "node-sass examples/cart/styles/styles.scss > .dist-test/examples/cart/index.css",
    "examples-css-checkout:build": "node-sass examples/checkout/styles/styles.scss > .dist-test/examples/checkout/index.css",
    "examples:copy": "cp -r examples .dist-test/examples",
    "------ Script used print out a nice start message once start is ready to go": null,
    "start:wait-print-msg": "wait-on file:.dist-test/sdk-testing.js file:.dist-test/tests.js tcp:4200 && echo \"\n\n⚡️⚡️⚡️  Good to go at http://localhost:4200 ⚡️⚡️⚡️\""
  },
  "author": "Shopify Inc.",
  "license": "MIT",
  "dependencies": {
    "whatwg-fetch": "0.10.1",
    "node-fetch": "1.3.3",
    "core-js": "2.4.1",
    "Base64": "0.3.0"
  },
  "devDependencies": {
    "aws-sdk": "2.2.44",
    "babel-cli": "6.11.4",
    "babel-core": "6.13.2",
    "babel-eslint": "6.1.2",
    "babel-plugin-add-module-exports": "0.2.1",
    "babel-plugin-add-shopify-header": "1.0.5",
    "babel-plugin-eslint-test-generator": "1.0.1",
    "babel-plugin-rename-umd-globals": "0.0.3",
    "babel-plugin-transform-es2015-modules-amd": "6.8.0",
    "babel-plugin-transform-es2015-modules-umd": "6.12.0",
    "babel-plugin-transform-es3-member-expression-literals": "6.8.0",
    "babel-plugin-transform-es3-property-literals": "6.8.0",
    "babel-plugin-transform-es5-property-mutators": "6.8.0",
    "babel-plugin-transform-inline-environment-variables": "6.8.0",
    "babel-preset-es2015": "6.9.0",
    "commander": "2.9.0",
    "concurrently": "2.2.0",
    "cross-env": "2.0.0",
    "eslint": "3.3.1",
    "eslint-config-nightmare-mode": "2.3.0",
    "fake-xml-http-request": "1.4.0",
    "get-project-version": "1.0.3",
    "get-stdin": "5.0.1",
    "git-rev": "0.2.1",
    "glob": "7.0.5",
    "http-server": "0.9.0",
    "js-string-escape": "1.0.0",
    "loader.js": "3.5.0",
    "mime-types": "2.1.10",
    "mocha": "2.5.3",
    "node-sass": "3.8.0",
    "nodegit": "0.13.0",
    "nodemon": "1.10.0",
    "pretender": "0.10.1",
    "qunitjs": "1.20.0",
    "rimraf": "2.5.4",
    "rollup": "0.36.3",
    "rollup-plugin-commonjs": "5.0.5",
    "rollup-plugin-node-resolve": "2.0.0",
    "route-recognizer": "0.1.9",
    "selenium-standalone": "5.5.0",
    "testem": "0.9.11",
    "uglify-js": "2.7.0",
    "wait-on": "1.5.2",
    "wdio-dot-reporter": "0.0.5",
    "wdio-junit-reporter": "0.1.0",
    "wdio-mocha-framework": "0.3.1",
    "webdriverio": "4.0.9",
    "whatwg-fetch": "0.10.1",
    "yuidoc-lucid-theme": "git+ssh://git@github.com/Shopify/yuidoc-lucid-theme.git#0b226d5",
    "yuidocjs": "0.10.2"
  },
  "browser": {
    "node-fetch": false
  }
}
