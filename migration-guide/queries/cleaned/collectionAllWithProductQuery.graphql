# collection.fetchAllWithProducts() - query all collections with products

query (
  $first: Int!
  $query: String
  $sortKey: CollectionSortKeys
  $reverse: Boolean
  $productsFirst: Int!
) {
  collections(
    first: $first
    query: $query
    sortKey: $sortKey
    reverse: $reverse
  ) {
    pageInfo {
      hasNextPage
      hasPreviousPage
    }
    edges {
      cursor
      node {
        id
        handle
        description
        descriptionHtml
        updatedAt
        title
        image {
          id
          url
          altText
        }
        products(first: $productsFirst) {
          pageInfo {
            hasNextPage
            hasPreviousPage
          }
          edges {
            cursor
            node {
              id
              availableForSale
              createdAt
              updatedAt
              descriptionHtml
              description
              handle
              productType
              title
              vendor
              publishedAt
              onlineStoreUrl
              options {
                name
                values
              }
              images(first: 250) {
                pageInfo {
                  hasNextPage
                  hasPreviousPage
                }
                edges {
                  cursor
                  node {
                    id
                    url
                    altText
                    width
                    height
                  }
                }
              }
              variants(first: 250) {
                pageInfo {
                  hasNextPage
                  hasPreviousPage
                }
                edges {
                  cursor
                  node {
                    id
                    title
                    price {
                      amount
                      currencyCode
                    }
                    weight
                    availableForSale
                    sku
                    compareAtPrice {
                      amount
                      currencyCode
                    }
                    image {
                      id
                      url
                      altText
                      width
                      height
                    }
                    selectedOptions {
                      name
                      value
                    }
                    unitPrice {
                      amount
                      currencyCode
                    }
                    unitPriceMeasurement {
                      measuredType
                      quantityUnit
                      quantityValue
                      referenceUnit
                      referenceValue
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
